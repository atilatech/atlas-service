service: atlas-service

provider:
  name: aws
  runtime: python3.8
  stage: ${opt:stage, 'staging'}
  region: us-east-1
  timeout: 300 # 300 seconds = 5 minutes
  environment:
    HUGGING_FACE_URL: ""
    HUGGING_FACE_API_KEY: ""
    PINECONE_API_KEY: ""
    # http://robertorocha.info/setting-up-a-selenium-web-scraper-on-aws-lambda-with-python/
    # Allows us to import packages such as atlas.transcribe
    PYTHONPATH: /var/task/src:/var/task/lib
  # https://github.com/serverless/serverless/issues/6241#issuecomment-531562596
  iam:
    role:
      managedPolicies:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
plugins:
  - serverless-python-requirements
  - serverless-wsgi
custom:
  wsgi:
    app: src.app.app
  enabled:
    dev: false
    staging: false
    prod: true
useDotenv: true
package:
  patterns:
    - '!.env'
    - '!venv/**'
    - '!node_modules/**'
functions:
 app:
   handler: wsgi_handler.handler
   events:
     - http: ANY /
     - http: 'ANY /{proxy+}'